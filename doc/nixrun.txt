*nixrun.txt* (ab)use the power of imperative nix in neovim

Introduction                                             *nixrun-introduction*

Nixrun provides a convenient way to install plugins temporarily, like the `nix
run` command.

After running |nixrun.setup()|, the commands |NixRunTSGrammar| and
|NixRunPlugin| are provided to install plugins and treesitter parsers.

nixrun.setup({opts})                                          *nixrun.setup()*

Configures the options to be used by the plugin.
>lua
    require("nixrun").setup({
        -- registry/url of nixpkgs, e.g. "flake:nixpkgs",
        -- "/home/user/nixpkgs", "channel:nixos-21.05"
        nixpkgs = "flake:nixpkgs",
    })
<

                                         *nixrun-treesitter* *NixRunTSGrammar*

Syntax: `NixRunTSGrammar <grammarName or flakeref#attrpath>`

- `grammarName` can be any of those listed in
  `nixpkgs#vimPlugins.nvim-treesitter.builtGrammars`.
- see |flake-output-attribute| for explaination on `flakeref#attrpath`

Temporarily install a treesitter grammar for this session. After the grammar
is successfully installed, the buffer must be reloaded using |:edit| for
treesitter highlighting to take effect.
>vim
    NixRunTSGrammar clojure
<

                                                *nixrun-plugin* *NixRunPlugin*

Syntax: `NixRunPlugin <pluginName or flakeref#attrpath or flakerefUrl>`

- `pluginName` can be any of those listed in `nixpkgs#vimPlugins`. Entries of
  this type will also install its dependencies.
- see |flake-output-attribute| for explaination on `flakeref#attrpath`
- `flakerefUrl` is something like `github:owner/repo`. See |flakeref|.
  flakrefs are NOT treated as flakes, we are just using the convenient URL
  syntax.

Temporarily install a plugin for this session. 

Example:

>vim
    " adds nixpkgs#vimPlugins.oil-nvim + dependencies to runtimepath
    NixRunPlugin oil-nvim

    " adds my-personal-flake#my-custom-plugin to runtimepath (dependency not 
    " included currently :c )
    NixRunPlugin my-personal-flake#my-custom-plugin

    " pulls the repo github:t-troebst/perfanno.nvim and add it to runtimepath,
    " no dependency resolution
    NixRunPlugin github:t-troebst/perfanno.nvim
<

Install procedure: After the plugin is successfully installed, mimicking
|:packadd|, the following files are sourced:
>
    /nix/store/plugin-dir/plugin/**/*.vim
    /nix/store/plugin-dir/plugin/**/*.lua

    -- if filetype detection was enabled:
    /nix/store/plugin-dir/ftdetect/*.vim
<

                                           *flakeref* *flake-output-attribute*

A Flake output attribute is a string in the form of `flakeref#attrpath`, e.g.
`nixpkgs#vimPlugins.nvim-treesitter`. For more details, see the "Flake output
attribute" section in `nix --help`.

`flakeref` is a shorthand for common URLs, e.g. `github:owner/repo`

Note that in within this plugin, a distinction is made between
`flakeref#attrPath` and `flakeref`:

- `flakeref#attrPath` installs a package of a valid flake.
- `flakeref` alone treats the url as the vim plugin source.

vim:tw=78:ts=8:sw=4:et:ft=help:norl:
